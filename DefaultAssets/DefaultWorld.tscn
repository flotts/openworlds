[gd_scene load_steps=15 format=2]

[ext_resource path="res://DefaultAssets/default_env.tres" type="Environment" id=1]
[ext_resource path="res://DefaultAssets/Mirror.gd" type="Script" id=2]

[sub_resource type="CubeMesh" id=1]

[sub_resource type="SpatialMaterial" id=2]
albedo_color = Color( 1, 0.871826, 0.707031, 1 )
metallic = 0.5
roughness = 0.53

[sub_resource type="ConvexPolygonShape" id=3]
points = PoolVector3Array( -1, 1, 1, 1, 1, -1, 1, 1, 1, -1, 1, -1, -1, -1, 1, 1, -1, -1, 1, -1, 1, -1, -1, -1, 1, 1, 1, -1, 1, -1, 1, 1, -1, -1, 1, 1, 1, -1, 1, -1, -1, -1, 1, -1, -1, -1, -1, 1, 1, 1, 1, -1, -1, 1, -1, 1, 1, 1, -1, 1, 1, 1, -1, -1, -1, -1, -1, 1, -1, 1, -1, -1 )

[sub_resource type="BoxShape" id=4]

[sub_resource type="QuadMesh" id=5]

[sub_resource type="VisualShaderNodeInput" id=6]
input_name = "screen_uv"

[sub_resource type="VisualShaderNodeVectorOp" id=7]
default_input_values = [ 0, Vector3( 0, 0, 0 ), 1, Vector3( -1, 1, 1 ) ]
operator = 2

[sub_resource type="VisualShaderNodeVectorOp" id=8]
default_input_values = [ 0, Vector3( 0, 0, 0 ), 1, Vector3( 1, 0, 0 ) ]

[sub_resource type="VisualShaderNodeTextureUniform" id=9]
uniform_name = "MirrorTexture"
texture_type = 1

[sub_resource type="VisualShader" id=10]
resource_local_to_scene = true
code = "shader_type spatial;
render_mode specular_schlick_ggx, unshaded;

uniform sampler2D MirrorTexture : hint_albedo;



void vertex() {
// Output:0

}

void fragment() {
// Input:2
	vec3 n_out2p0 = vec3(SCREEN_UV, 0.0);

// VectorOp:3
	vec3 n_in3p1 = vec3(-1.00000, 1.00000, 1.00000);
	vec3 n_out3p0 = n_out2p0 * n_in3p1;

// VectorOp:4
	vec3 n_in4p1 = vec3(1.00000, 0.00000, 0.00000);
	vec3 n_out4p0 = n_out3p0 + n_in4p1;

// TextureUniform:5
	vec3 n_out5p0;
	float n_out5p1;
	{
		vec4 n_tex_read = texture(MirrorTexture, n_out4p0.xy);
		n_out5p0 = n_tex_read.rgb;
		n_out5p1 = n_tex_read.a;
	}

// Output:0
	ALBEDO = n_out5p0;

}

void light() {
// Output:0

}
"
graph_offset = Vector2( 0, 150 )
flags/unshaded = true
nodes/fragment/0/position = Vector2( 640, 140 )
nodes/fragment/2/node = SubResource( 6 )
nodes/fragment/2/position = Vector2( 60, 220 )
nodes/fragment/3/node = SubResource( 7 )
nodes/fragment/3/position = Vector2( 240, 240 )
nodes/fragment/4/node = SubResource( 8 )
nodes/fragment/4/position = Vector2( 260, 340 )
nodes/fragment/5/node = SubResource( 9 )
nodes/fragment/5/position = Vector2( 440, 220 )
nodes/fragment/connections = PoolIntArray( 2, 0, 3, 0, 3, 0, 4, 0, 4, 0, 5, 0, 5, 0, 0, 0 )

[sub_resource type="ViewportTexture" id=12]
viewport_path = NodePath("Mirror/Viewport")

[sub_resource type="ShaderMaterial" id=11]
resource_local_to_scene = true
shader = SubResource( 10 )
shader_param/MirrorTexture = SubResource( 12 )

[node name="Spatial" type="Spatial"]

[node name="Floor_Main" type="MeshInstance" parent="."]
transform = Transform( 40, 0, 0, 0, 1, 0, 0, 0, 40, 0, -0.828144, 0 )
mesh = SubResource( 1 )
material/0 = SubResource( 2 )

[node name="StaticBody" type="StaticBody" parent="Floor_Main"]

[node name="CollisionShape" type="CollisionShape" parent="Floor_Main/StaticBody"]
shape = SubResource( 3 )

[node name="WorldEnvironment" type="WorldEnvironment" parent="."]
environment = ExtResource( 1 )

[node name="Spawn" type="Spatial" parent="."]

[node name="Mirror" type="StaticBody" parent="."]
transform = Transform( -3.49691e-07, 0, -8, 0, 4, 0, 8, 0, -3.49691e-07, 3, 1.98239, 0 )
script = ExtResource( 2 )

[node name="CollisionShape" type="CollisionShape" parent="Mirror"]
transform = Transform( 0.5, 0, 0, 0, 0.5, 0, 0, 0, 0.005, 0, 0, 0 )
shape = SubResource( 4 )

[node name="PlaneTransform" type="MeshInstance" parent="Mirror"]
generate_lightmap = false
mesh = SubResource( 5 )
material/0 = SubResource( 11 )

[node name="Viewport" type="Viewport" parent="Mirror"]
size = Vector2( 870, 581 )
keep_3d_linear = true

[node name="Camera" type="Camera" parent="Mirror/Viewport"]
transform = Transform( -0.416143, -0.175797, 0.892144, 0, 0.981135, 0.193332, -0.909299, 0.0804541, -0.408292, 11.4208, 3.14963, -2.85277 )
